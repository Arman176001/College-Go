<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OpenLayers Map with Real-Time Location</title>
    <link rel="stylesheet" href="https://openlayers.org/en/v6.13.0/css/ol.css" type="text/css">
    <style>
        /* Specify the size of the map */
        #map {
            width: 100%;
            height: calc(100vh - 80px); /* Adjust for the height of the health and other bars */
        }

        /* Define the style for the real-time location icon */
        .location-marker {
            width: 32px;
            height: 32px;
            background-image: url('https://w7.pngwing.com/pngs/520/690/png-transparent-red-among-us-cartoons-among-us.png');
            background-size: cover;
        }

        /* Style for the coordinates display */
        #coordinates-display {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 5px;
            border-radius: 5px;
            font-size: 12px;
            z-index: 1000;
        }

        /* Style for the container of bars */
        .bars-container {
            display: flex;
            flex-direction: column;
            position: absolute;
            top: 10px; /* Adjust as needed */
            right: 10px; /* Adjust as needed */
        }

        /* Style for individual bars */
        .bar {
            height: 20px; /* Adjust the height of the bars */
            margin-bottom: 5px; /* Adjust the spacing between bars */
            border-radius: 5px;
            overflow: hidden;
        }

        /* Define specific styles for each bar */
        #health-bar {
            width: 150px; /* Adjust the width of the health bar */
            background-color: #ddd;
            border: 1px solid #333;
        }

        #red-bar {
            width: 100px; /* Adjust the width of the red bar */
            background-color: #f00;
        }

        #blue-bar {
            width: 120px; /* Adjust the width of the blue bar */
            background-color: #00f;
        }
    </style>
</head>
<body>
    <!-- Define a div element for the map -->
    <div id="map"></div>

    <!-- Define a div element for displaying coordinates -->
    <div id="coordinates-display"></div>

    <!-- Define a container for bars -->
    <div class="bars-container">
        <!-- Health Bar -->
        <div id="health-bar" class="bar">
            <div id="health-progress" style="width: 50%;"></div> <!-- Initial health value -->
        </div>

        <!-- Red Bar -->
        <div id="red-bar" class="bar"></div> <!-- Initial value -->

        <!-- Blue Bar -->
        <div id="blue-bar" class="bar"></div> <!-- Initial value -->
    </div>

    <!-- Import OpenLayers library -->
    <script src="https://openlayers.org/en/v6.13.0/build/ol.js"></script>

    <script>
        // Create a new map instance
        var map = new ol.Map({
            // Define the target element for the map
            target: 'map',
            // Define the layers of the map
            layers: [
                // Add a base layer
                new ol.layer.Tile({
                    // Specify the source of the tiles (OpenStreetMap in this case)
                    source: new ol.source.OSM()
                })
            ],
            // Define the view of the map
            view: new ol.View({
                // Specify the initial center of the map (updated later)
                center: ol.proj.fromLonLat([0, 0]),
                // Specify the initial zoom level of the map
                zoom: 19, // Adjust the zoom level as needed to show streets
                // Enable smooth zooming
                constrainResolution: false
            })
        });

        // Define the coordinate for the real-time location
        var realtimeLocation = ol.proj.fromLonLat([0, 0]);

        // Create an overlay to display the real-time location icon
        var markerOverlay = new ol.Overlay({
            position: realtimeLocation,
            positioning: 'center-center',
            element: document.createElement('div'),
            stopEvent: false
        });

        // Add the overlay to the map
        map.addOverlay(markerOverlay);

        // Set the icon for the real-time location
        markerOverlay.getElement().className = 'location-marker';

        // Update the position of the real-time location icon
        function updateLocation(position) {
            var latitude = position.coords.latitude;
            var longitude = position.coords.longitude;
            realtimeLocation = ol.proj.fromLonLat([longitude, latitude]);
            markerOverlay.setPosition(realtimeLocation);

            // Center the map on the real-time location icon
            map.getView().setCenter(realtimeLocation);

            // Check distance from target coordinates
            var targetCoordinates = ol.proj.fromLonLat([76.7858, 30.7671]); // Replace with your target coordinates
            var distance = ol.sphere.getDistance(targetCoordinates, realtimeLocation);
            var distanceInMeters = distance.toFixed(2);

            // If user is within 10 meters of target coordinates, show dialog box
            if (distanceInMeters <= 40) {
                alert("Congratulations! you have reached pec cafe");
            }
        }

        // Fetch the user's current location using the Geolocation API
        function fetchLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(updateLocation, function(error) {
                    console.error('Error fetching location:', error);
                });
            } else {
                console.error('Geolocation is not supported by this browser.');
            }
        }

        // Fetch the initial location when the page loads
        fetchLocation();

        // Update the location every 5 seconds
        setInterval(fetchLocation, 5000); // Update every 5 seconds

        // Create a control to display coordinates
        var mousePositionControl = new ol.control.MousePosition({
            coordinateFormat: ol.coordinate.createStringXY(4),
            projection: 'EPSG:4326',
            className: 'custom-mouse-position',
            target: document.getElementById('coordinates-display'),
            undefinedHTML: '&nbsp;'
        });

        // Add the control to the map
        map.addControl(mousePositionControl);

        // Update the health bar (for demonstration purposes)
        function updateHealth(healthPercentage) {
            var healthProgress = document.getElementById('health-progress');
            healthProgress.style.width = healthPercentage + '%';
        }

        // Example: Update health to 70% (for demonstration purposes)
        updateHealth(70);

        // Example: Update red bar to 30% and blue bar to 60% (for demonstration purposes)
        document.getElementById('red-bar').style.width = '30%';
        document.getElementById('blue-bar').style.width = '60%';
    </script>
</body>
</html>